apply plugin: 'org.ensta.ecore2java'

configurations {
	antlr4
	ecore
	compile.extendsFrom antlr4
	compile.extendsFrom ecore
}
dependencies {
	antlr4  group: 'org.antlr', name: 'antlr4' , version: '4.5.+'

    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.common',               version: '2.11.0-v20150123-0347'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore',                version: '2.11.0-v20150123-0347'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi',            version: '2.11.0-v20150123-0347'
}

String antlr4OutputPath(String path) {
	if (System.properties['os.name'].replaceAll(' ', '').toLowerCase().contains('win')) {
		return file(path + '/grammar')
	}
	return file(path)
}
task generateAntlr4Parser(type: JavaExec) {
	def generatedPath = file('generated')
	generatedPath.mkdir()
	classpath configurations.antlr4
	main = "org.antlr.v4.Tool"
	args = ["grammar/DVE.g4"
		, "-package"
		, "DVE.grammar"
		, "-o"
		, antlr4OutputPath("generated/DVE")]
}

sourceSets.main.java.srcDir 'generated'
compileJava.dependsOn generateAntlr4Parser, ecore2java

clean { doLast { project.delete "tmp" } }
